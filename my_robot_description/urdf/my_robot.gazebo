<?xml version="1.0" ?>
<robot name="my_robot" xmlns:xacro="http://www.ros.org/wiki/xacro" >
<!-- <xacro:include filename="$(find my_robot_description)/urdf/my_robot.xacro"/>
<xacro:include filename="$(find my_robot_description)/urdf/my_robot.gazebo"/> -->


<xacro:property name="body_color" value="Gazebo/Silver" />

<gazebo>
  <plugin name="control" filename="libgazebo_ros_control.so"/>
</gazebo>
<gazebo reference="base_link">
  <material>${body_color}</material>
  <mu1>0.1</mu1>
  <mu2>0.1</mu2>
  <self_collide>true</self_collide>
  <gravity>true</gravity>
</gazebo>

<gazebo reference="right_wheel_link_1">
  <material>${body_color}</material>
  <mu1>1500</mu1>
  <mu2>1500</mu2>
  <self_collide>true</self_collide>
</gazebo>

<gazebo reference="left_wheel_link_1">
  <material>${body_color}</material>
  <mu1>1500</mu1>
  <mu2>1500</mu2>
  <self_collide>true</self_collide>
</gazebo>

<gazebo reference="lidar_link_1">
  <material>${body_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <self_collide>true</self_collide>
</gazebo>

<!-- imu link -->
<gazebo reference="imu_link">
  <gravity>true</gravity>
  <sensor name="twr_imu" type="imu">
      <always_on>true</always_on>
      <update_rate>100</update_rate>
      <visualize>true</visualize>
      <imu>
          <orientation>
              <x>
                  <noise type="gaussian">
                      <mean>0.0</mean>
                      <stddev>2e-3</stddev>
                  </noise>
              </x>
              <y>
                  <noise type="gaussian">
                      <mean>0.0</mean>
                      <stddev>2e-3</stddev>
                  </noise>
              </y>
              <z>
                  <noise type="gaussian">
                      <mean>0.0</mean>
                      <stddev>2e-3</stddev>
                  </noise>
              </z>
          </orientation>
          <angular_velocity>
              <x>
                  <noise type="gaussian">
                      <mean>0.0</mean>
                      <stddev>2e-4</stddev>
                  </noise>
              </x>
              <y>
                  <noise type="gaussian">
                      <mean>0.0</mean>
                      <stddev>2e-4</stddev>
                  </noise>
              </y>
              <z>
                  <noise type="gaussian">
                      <mean>0.0</mean>
                      <stddev>2e-4</stddev>
                  </noise>
              </z>
          </angular_velocity>
          <linear_acceleration>
              <x>
                  <noise type="gaussian">
                      <mean>0.0</mean>
                      <stddev>1.7e-2</stddev>
                  </noise>
              </x>
              <y>
                  <noise type="gaussian">
                      <mean>0.0</mean>
                      <stddev>1.7e-2</stddev>
                  </noise>
              </y>
              <z>
                  <noise type="gaussian">
                      <mean>0.0</mean>
                      <stddev>1.7e-2</stddev>
                  </noise>
              </z>
          </linear_acceleration>
      </imu>
      <plugin name="two_wheeled_robot_imu" filename="libgazebo_ros_imu_sensor.so">
          <initial_orientation_as_reference>false</initial_orientation_as_reference>
          <frame_name>imu_link</frame_name>
          <ros>
              <namespace>/</namespace>
              <remapping>~/out:=imu</remapping>
          </ros>
      </plugin>
  </sensor>
</gazebo>

<!-- differential drive controller plugin -->
<gazebo>
  <plugin name="four_diff_controller" filename="libgazebo_ros_diff_drive.so">

      <update_rate>50</update_rate>
      <num_wheel_pairs>1</num_wheel_pairs>
      <left_joint>Rev2</left_joint>
      <right_joint>Rev1</right_joint>
      <wheel_separation>0.172</wheel_separation>
      <wheel_diameter>0.1</wheel_diameter>
      <max_wheel_torque>20</max_wheel_torque>
      <max_wheel_acceleration>1.0</max_wheel_acceleration>
      <command_topic>cmd_vel</command_topic>
      <publish_odom>true</publish_odom>
      <publish_odom_tf>true</publish_odom_tf>
      <publish_wheel_tf>false</publish_wheel_tf>
      <odometry_topic>odom</odometry_topic>
      <odometry_frame>odom</odometry_frame>
      <robot_base_frame>base_link</robot_base_frame>
      <odometry_source>1</odometry_source>
      <ros>
          <!-- <remapping>odom:=/odometry</remapping> -->
      </ros>
  </plugin>
</gazebo>

<!-- lidar controller plugin -->
<gazebo reference="lidar_link_1">
  <sensor name="lidar" type="ray">
    <always_on>true</always_on>
    <visualize>true</visualize>
    <update_rate>5</update_rate>
    <ray>
      <scan>
        <horizontal>
          <samples>360</samples>
          <resolution>1.000000</resolution>
          <min_angle>0.000000</min_angle>
          <max_angle>6.280000</max_angle>
        </horizontal>
      </scan>
      <range>
        <min>0.120000</min>
        <max>3.5</max>
        <resolution>0.015000</resolution>
      </range>
      <noise>
        <type>gaussian</type>
        <mean>0.0</mean>
        <stddev>0.01</stddev>
      </noise>
    </ray>
    <plugin name="scan" filename="libgazebo_ros_ray_sensor.so">
      <ros>
        <remapping>~/out:=scan</remapping>
      </ros>
      <output_type>sensor_msgs/LaserScan</output_type>
      <frame_name>lidar_link_1</frame_name>
    </plugin>
  </sensor>
</gazebo>

</robot>
