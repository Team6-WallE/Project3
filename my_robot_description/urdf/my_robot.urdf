<?xml version="1.0" ?>
<robot name="my_robot" xmlns:xacro="http://www.ros.org/wiki/xacro">

<!-- <xacro:include filename="$(find my_robot_description)/urdf/materials.xacro" />
<xacro:include filename="$(find my_robot_description)/urdf/my_robot.trans" />
<xacro:include filename="$(find my_robot_description)/urdf/my_robot.gazebo" />
<xacro:include filename="$(find my_robot_description)/urdf/my_robot.xacro" /> -->
<link name="base_link">
  <inertial>
    <origin xyz="0.003947432081749706 0.0 0.052804115668456025" rpy="0 0 0"/>
    <mass value="2.3079643337726483"/>
    <inertia ixx="0.00789" iyy="0.00841" izz="0.014813" ixy="-0.0" iyz="0.0" ixz="-0.000341"/>
  </inertial>
  <visual>
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <geometry>
      <mesh filename="file://$(find my_robot_description)/meshes/base_link.stl" scale="0.001 0.001 0.001"/>
    </geometry>
    <material name="silver"/>
  </visual>
  <collision>
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <geometry>
      <mesh filename="file://$(find my_robot_description)/meshes/base_link.stl" scale="0.001 0.001 0.001"/>
    </geometry>
  </collision>
</link>

<link name="right_wheel_link_1">
  <inertial>
    <origin xyz="-7.237528875152536e-18 -0.009999999999999995 -1.3877787807814457e-17" rpy="0 0 0"/>
    <mass value="0.14608405839192537"/>
    <inertia ixx="9.6e-05" iyy="0.000183" izz="9.6e-05" ixy="0.0" iyz="0.0" ixz="-0.0"/>
  </inertial>
  <visual>
    <origin xyz="-0.0 0.1 -0.05" rpy="0 0 0"/>
    <geometry>
      <mesh filename="file://$(find my_robot_description)/meshes/right_wheel_link_1.stl" scale="0.001 0.001 0.001"/>
    </geometry>
    <material name="silver"/>
  </visual>
  <collision>
    <origin xyz="-0.0 0.1 -0.05" rpy="0 0 0"/>
    <geometry>
      <mesh filename="file://$(find my_robot_description)/meshes/right_wheel_link_1.stl" scale="0.001 0.001 0.001"/>
    </geometry>
  </collision>
</link>

<link name="left_wheel_link_1">
  <inertial>
    <origin xyz="-7.237528875152536e-18 0.009999999999999995 -1.3877787807814457e-17" rpy="0 0 0"/>
    <mass value="0.14608405839192537"/>
    <inertia ixx="9.6e-05" iyy="0.000183" izz="9.6e-05" ixy="-0.0" iyz="-0.0" ixz="-0.0"/>
  </inertial>
  <visual>
    <origin xyz="-0.0 -0.1 -0.05" rpy="0 0 0"/>
    <geometry>
      <mesh filename="file://$(find my_robot_description)/meshes/left_wheel_link_1.stl" scale="0.001 0.001 0.001"/>
    </geometry>
    <material name="silver"/>
  </visual>
  <collision>
    <origin xyz="-0.0 -0.1 -0.05" rpy="0 0 0"/>
    <geometry>
      <mesh filename="file://$(find my_robot_description)/meshes/left_wheel_link_1.stl" scale="0.001 0.001 0.001"/>
    </geometry>
  </collision>
</link>

<link name="lidar_link_1">
  <inertial>
    <origin xyz="0.0 -1.772456051057764e-17 0.012499999999999997" rpy="0 0 0"/>
    <mass value="0.7552585088770711"/>
    <inertia ixx="0.000271" iyy="0.000271" izz="0.000463" ixy="-0.0" iyz="0.0" ixz="0.0"/>
  </inertial>
  <visual>
    <origin xyz="-0.0525 0.0 -0.11" rpy="0 0 0"/>
    <geometry>
      <mesh filename="file://$(find my_robot_description)/meshes/lidar_link_1.stl" scale="0.001 0.001 0.001"/>
    </geometry>
    <material name="silver"/>
  </visual>
  <collision>
    <origin xyz="-0.0525 0.0 -0.11" rpy="0 0 0"/>
    <geometry>
      <mesh filename="file://$(find my_robot_description)/meshes/lidar_link_1.stl" scale="0.001 0.001 0.001"/>
    </geometry>
  </collision>
</link>

<link name="base_footprint">
    <xacro:box_inertia m="0" w="0" d="0" h="0"/>
  </link>
 
  <!-- The base footprint of the robot is located underneath the chassis -->
  <joint name="base_joint" type="fixed">
    <parent link="base_link"/>
    <child link="base_footprint"/>
    <!-- <origin xyz="0.0 0.0 ${-(wheel_radius+wheel_zoff)}" rpy="0 0 0"/> -->
  </joint>

<!-- imu -->
<link name='imu_link'>
  <pose>0 0 0 0 0 0</pose>
  <inertial>
      <mass value="0.01"/>
      <origin xyz="0.0 0 0" rpy="0 0 0"/>
      <inertia
          ixx="1e-7" ixy="0" ixz="0"
          iyy="1e-7" iyz="0"
          izz="1e-7"
      />
  </inertial>
  <visual name='imu_visual'>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
          <box size="0.001 0.001 0.001"/>
      </geometry>
      <material name='imu_material'>
          <ambient>0.1 0.1 0.1 1</ambient>
          <diffuse>0.1 0.1 0.2 1</diffuse>
          <specular>0 0 0 0</specular>
          <emissive>0 0 0 1</emissive>
      </material>
  </visual>
  <collision name='imu_collision'>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
          <box size="0.001 0.001 0.001"/>
      </geometry>
  </collision>
</link>

<joint type="fixed" name="imu_joint">
  <child link="imu_link"/>
  <parent link="base_link"/>
  <origin xyz="0.0 0.0 0.08" rpy="0 0 0"/>
</joint>

<!-- imu link -->
<gazebo reference="imu_link">
  <gravity>true</gravity>
  <sensor name="twr_imu" type="imu">
      <always_on>true</always_on>
      <update_rate>100</update_rate>
      <visualize>true</visualize>
      <imu>
          <orientation>
              <x>
                  <noise type="gaussian">
                      <mean>0.0</mean>
                      <stddev>2e-3</stddev>
                  </noise>
              </x>
              <y>
                  <noise type="gaussian">
                      <mean>0.0</mean>
                      <stddev>2e-3</stddev>
                  </noise>
              </y>
              <z>
                  <noise type="gaussian">
                      <mean>0.0</mean>
                      <stddev>2e-3</stddev>
                  </noise>
              </z>
          </orientation>
          <angular_velocity>
              <x>
                  <noise type="gaussian">
                      <mean>0.0</mean>
                      <stddev>2e-4</stddev>
                  </noise>
              </x>
              <y>
                  <noise type="gaussian">
                      <mean>0.0</mean>
                      <stddev>2e-4</stddev>
                  </noise>
              </y>
              <z>
                  <noise type="gaussian">
                      <mean>0.0</mean>
                      <stddev>2e-4</stddev>
                  </noise>
              </z>
          </angular_velocity>
          <linear_acceleration>
              <x>
                  <noise type="gaussian">
                      <mean>0.0</mean>
                      <stddev>1.7e-2</stddev>
                  </noise>
              </x>
              <y>
                  <noise type="gaussian">
                      <mean>0.0</mean>
                      <stddev>1.7e-2</stddev>
                  </noise>
              </y>
              <z>
                  <noise type="gaussian">
                      <mean>0.0</mean>
                      <stddev>1.7e-2</stddev>
                  </noise>
              </z>
          </linear_acceleration>
      </imu>
      <plugin name="two_wheeled_robot_imu" filename="libgazebo_ros_imu_sensor.so">
          <initial_orientation_as_reference>false</initial_orientation_as_reference>
          <frame_name>imu_link</frame_name>
          <ros>
              <namespace>/</namespace>
              <remapping>~/out:=imu</remapping>
          </ros>
      </plugin>
  </sensor>
</gazebo>

<gazebo>
  <plugin name="four_diff_controller" filename="libgazebo_ros_diff_drive.so">

      <update_rate>50</update_rate>
      <num_wheel_pairs>1</num_wheel_pairs>
      <left_joint>Rev2</left_joint>
      <right_joint>Rev1</right_joint>
      <wheel_separation>0.172</wheel_separation>
      <wheel_diameter>0.1</wheel_diameter>
      <max_wheel_torque>20</max_wheel_torque>
      <max_wheel_acceleration>1.0</max_wheel_acceleration>
      <command_topic>cmd_vel</command_topic>
      <publish_odom>true</publish_odom>
      <publish_odom_tf>true</publish_odom_tf>
      <publish_wheel_tf>false</publish_wheel_tf>
      <odometry_topic>odom</odometry_topic>
      <odometry_frame>odom</odometry_frame>
      <robot_base_frame>base_link</robot_base_frame>
      <odometry_source>1</odometry_source>
      <ros>
          <!-- <remapping>odom:=/odometry</remapping> -->
      </ros>
  </plugin>
</gazebo>

<!-- lidar controller plugin -->
<gazebo reference="lidar_link_1">
  <sensor name="lidar" type="ray">
    <always_on>true</always_on>
    <visualize>true</visualize>
    <update_rate>5</update_rate>
    <ray>
      <scan>
        <horizontal>
          <samples>360</samples>
          <resolution>1.000000</resolution>
          <min_angle>0.000000</min_angle>
          <max_angle>6.280000</max_angle>
        </horizontal>
      </scan>
      <range>
        <min>0.120000</min>
        <max>3.5</max>
        <resolution>0.015000</resolution>
      </range>
      <noise>
        <type>gaussian</type>
        <mean>0.0</mean>
        <stddev>0.01</stddev>
      </noise>
    </ray>
    <plugin name="scan" filename="libgazebo_ros_ray_sensor.so">
      <ros>
        <remapping>~/out:=scan</remapping>
      </ros>
      <output_type>sensor_msgs/LaserScan</output_type>
      <frame_name>lidar_link_1</frame_name>
    </plugin>
  </sensor>
</gazebo>

<joint name="Rev1" type="continuous">
  <origin xyz="0.0 -0.1 0.05" rpy="0 0 0"/>
  <parent link="base_link"/>
  <child link="right_wheel_link_1"/>
  <axis xyz="0.0 1.0 0.0"/>
</joint>

<joint name="Rev2" type="continuous">
  <origin xyz="0.0 0.1 0.05" rpy="0 0 0"/>
  <parent link="base_link"/>
  <child link="left_wheel_link_1"/>
  <axis xyz="0.0 1.0 0.0"/>
</joint>

<joint name="Rigid3" type="fixed">
  <origin xyz="0.0525 0.0 0.11" rpy="0 0 0"/>
  <parent link="base_link"/>
  <child link="lidar_link_1"/>
</joint>

</robot>
